<?php
	namespace WebFX\Parser;
	
	use UniversalEditor\ObjectModels\Markup\MarkupObjectModel;
	
	use WebFX\System;
	
	use WebFX\WebPage;
	use WebFX\WebNamespaceReference;
	use WebFX\WebScript;
	use WebFX\WebStyleSheet;
	use WebFX\WebVariable;
	use WebFX\WebPageMessage;
	
	use WebFX\WebControlAttribute;
	use WebFX\WebControlClientIDMode;
	
	use WebFX\HTMLControl;
	use WebFX\HTMLControls\HTMLControlLiteral;
		
	require("XMLParser.inc.php");
	
	
	class WebFXPage
	{
		/**
		 * The Page generated by this template.
		 * @var Page
		 */
		public $Page;
		
		public function OnInit()
		{
		}
	}
	
	class WebFXParser
	{
		public $MasterPages;
		public $Pages;
		
		public function GetMasterPageByFileName($filename)
		{
			foreach ($this->MasterPages as $page)
			{
				if ($page->FileName == $filename) return $page;
			}
			return null;
		}
		public function GetPageByFileName($filename)
		{
			foreach ($this->Pages as $page)
			{
				if ($page->FileName == $filename) return $page;
			}
			return null;
		}
		
		public function __construct()
		{
			$this->Clear();
		}
		
		public function Clear()
		{
			$this->MasterPages = array();
			$this->Pages = array();
		}
		
		/**
		 * Loads an XML file describing a portion or portions of the WebFX environment.
		 * @param string $filename The name of the XML file to load into the environment.
		 */
		public function LoadFile($filename)
		{
			$markup = MarkupObjectModel::FromFile($filename);
			
			$tagWebsite = $markup->GetElement("Website");
			if ($tagWebsite == null) return;
			
			$tagMasterPages = $tagWebsite->GetElement("MasterPages");
			
			if ($tagMasterPages != null)
			{
				foreach ($tagMasterPages->Elements as $element)
				{
					if (get_class($element) != "UniversalEditor\\ObjectModels\\Markup\\MarkupTagElement") continue;
					if ($element->Name == "MasterPage")
					{
						$this->MasterPages[] = WebPage::FromMarkup($element, $this);
					}
				}
			}
			
			$tagPages = $tagWebsite->GetElement("Pages");
			if ($tagPages != null)
			{
				foreach ($tagPages->Elements as $element)
				{
					if (get_class($element) != "UniversalEditor\\ObjectModels\\Markup\\MarkupTagElement") continue;
					if ($element->Name == "Page")
					{
						$this->Pages[] = WebPage::FromMarkup($element, $this);
					}
				}
			}
		}
	}
?>